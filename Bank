
import java.util.ArrayList;

public class Bank {

	private static Bank instance = new Bank();
	// private Client[] clients;
	private ArrayList<Client> clients;
	private Logger logServece;
	private static float totalComision;

	private Bank() {
		// Client[] clients = new Client[100];
		clients = new ArrayList<Client>();
		logServece = new Logger("C:");

	}

	public static Bank getInstance() {
		return instance;
	}

	public static void setInstance(Bank instance) {
		Bank.instance = instance;
	}

	// public Client[] getClient() {
	// return clients;
	// }
	//
	// public void setClient(Client[] client) {
	// this.clients = client;
	// }

	public Logger getLogServece() {
		return logServece;
	}

	public void setClients(ArrayList<Client> clients) {
		this.clients = clients;
	}

	public static void setTotalComision(float totalComision) {
		Bank.totalComision = totalComision;
	}

	public void setLogServece(Logger logServece) {
		this.logServece = logServece;
	}

	public ArrayList<Client> getClients() {
		return clients;
	}

	public void viewLogs() {

	}

	public static void updateTotalComision(float total) {
		totalComision = total;
	}

	public static float getTotalComision() {
		return totalComision;
	}

	// public void removeClient(Client c) {
	// if (clients != null && clients.length > 0) {
	// for (int i = 0; i < clients.length; i++) {
	// if (clients[i] != null && c.equals(clients[i])) {
	// clients[i] = null;
	// return;
	// }
	// }
	//
	// }
	// }

	public static void removeClient(ArrayList<Client> clients, Client client) {
		if (client.equals(client))
			clients.remove(client);
		;

	}

	// public float getBalance() {
	// float sum = getTotalComision();
	// for (int i = 0; i < clients.length; i++) {
	// sum += clients[i].getFortune();
	// }
	// return sum;
	// }
	//
	// public void clientList() {
	// for (int i = 0; i < clients.length; i++) {
	// System.out.print(clients[i]);
	// }
	//
	// }
	public float getBalance() {
		float sum = getTotalComision();
		for (int i = 0; i < clients.size(); i++) {
			sum += clients.get(i).getFortune();
		}
		return sum;

	}

	public void clientList() {
		System.out.println(clients);
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((clients == null) ? 0 : clients.hashCode());
		result = prime * result + ((logServece == null) ? 0 : logServece.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Bank other = (Bank) obj;
		if (clients == null) {
			if (other.clients != null)
				return false;
		} else if (!clients.equals(other.clients))
			return false;
		if (logServece == null) {
			if (other.logServece != null)
				return false;
		} else if (!logServece.equals(other.logServece))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Bank [clients=" + clients + ", logServece=" + logServece + "]";
	}

	public void startAccountUpdater() {

	}
}
